% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collectors_prepare_dictionary.R
\name{collectors_prepare_dictionary}
\alias{collectors_prepare_dictionary}
\alias{collectors_prepare_dictionary_v2}
\title{Prepare the list with the last name of the main collector}
\usage{
collectors_prepare_dictionary_v2(
  occ = NA,
  collectorDictionary_file =
    "https://raw.githubusercontent.com/pablopains/parseGBIF/main/collectorDictionary/CollectorsDictionary_parseGBIF.csv",
  silence = TRUE
)
}
\arguments{
\item{occ}{GBIF occurrence table with selected columns as select_gbif_fields(columns = 'standard')}

\item{collectorDictionary_file}{Collector dictionary file - point to a file on your local disk or download via git at 'https://raw.githubusercontent.com/pablopains/parseGBIF/main/collectorDictionary/CollectorsDictionary_parseGBIF.csv'.}

\item{silence}{if TRUE does not display progress messages}
}
\value{
Ctrl_nameRecordedBy_Standard,
Ctrl_recordedBy,
Ctrl_notes,
collectorDictionary,
Ctrl_update,
collectorName,
Ctrl_fullName,
Ctrl_fullNameII,
CVStarrVirtualHerbarium_PersonDetails
}
\description{
Returns the list with the last name of the main collector associated with the unique key recordedBy.
A necessary step for parsing duplicate records is generating a robust key for each unique collecting event
(aka ‘gathering’) that will support the recognition of duplicate records. For this purpose we generate a string
combining the plant family name +  first collector’s surname +  the collection number.
It is therefore essential to consistently record the collector surname and for this purpose we provide a collector
dictionary. To extract the surname of the main collector based on the recordedBy field and assemble a list relating
the last name of the main collector and the raw data from the recordedBy, use the collectors_prepare_dictionary function.

It is recommended to check the main collector’s last name in the nameRecordedBy_Standard field.
Our goal is to standardize the main collector’s last name, which is automatically extracted from the recordedBy field.
We do so by standardizing the text string so that it begins with an uppercase character and to replace non-ascii
characters, so that collector reponsible for a collection event is always recorded using  the same string of characters.
If the searched recordedBy entry is present in the collector’s dictionary, the function retrieves the last name
of the main collector with reference to the recordedBy field (in which case the CollectorDictionary field will be
flagged as ‘checked’), otherwise, the function will return the last name of the main collector, extracted
automatically from the recordedBy field .

Once verified, the collector’s dictionary can be reused in the future.
}
\details{
If recordedBy is present in the collector's dictionary, it returns the checked name, if not, it returns the last name of the main collector, extracted from the recordedBy field.
If recordedBy is present in the collector's dictionary, returns the main collector's last name associated with the single recordedBy key,
otherwise, returns the main collector's last name, extracted from the recordedBy field.
It is recommended to curate the main collector's surname, automatically extracted from the recordedBy field.
The objective is to standardize the last name of the main collector.
That the primary botanical collector of a sample is always recognized by the same last name, standardized in capital letters and non-ascii characters replaced
}
\examples{
\donttest{
help(collectors_prepare_dictionary)

occ <- prepare_gbif_occurrence_data(gbif_occurrece_file =  'https://raw.githubusercontent.com/pablopains/parseGBIF/main/collectorDictionary/CollectorsDictionary_parseGBIF.csv',
                                    columns = 'standard')

collectorsDictionaryFromDataset <- collectors_prepare_dictionary(occ = occ,
                                                                collectorDictionary_file =  'https://raw.githubusercontent.com/pablopains/parseGBIF/main/collectorDictionary/CollectorsDictionary.csv')

colnames(collectorsDictionaryFromDataset)
head(collectorsDictionaryFromDataset)

collectorDictionary_checked_file <- paste0(tempdir(),'/','collectorsDictionaryFromDataset.csv')

collectorDictionary_checked_file

write.csv(collectorsDictionaryFromDataset,
          collectorDictionary_checked_file,
          row.names = FALSE,
          fileEncoding = "UTF-8",
          na = "")
}
}
\seealso{
\code{\link[parseGBIF]{collectors_get_name}}, \code{\link[parseGBIF]{generate_collection_event_key}}
}
\author{
Pablo Hendrigo Alves de Melo,
Nadia Bystriakova &
Alexandre Monro
}
