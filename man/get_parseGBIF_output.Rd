% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_parseGBIF_output.R
\name{get_parseGBIF_output}
\alias{get_parseGBIF_output}
\title{Get parseGBIF Output Data}
\usage{
get_parseGBIF_output(
  path_file,
  name_file = "parseGBIF_5_occ_all_data.csv",
  data_sel = c("useable", "unusable", "duplicate"),
  dwc_col = c("Ctrl_gbifID", "Ctrl_institutionCode", "Ctrl_collectionCode",
    "Ctrl_basisOfRecord", "Ctrl_catalogNumber", "Ctrl_recordNumber", "Ctrl_recordedBy",
    "Ctrl_eventDate", "Ctrl_countryCode", "Ctrl_stateProvince", "Ctrl_municipality",
    "Ctrl_identifiedBy", "Ctrl_dateIdentified", "Ctrl_scientificName", "Ctrl_taxonRank",
    "Ctrl_decimalLatitude", "Ctrl_decimalLongitude"),
  parseGBIF_col = c("Ctrl_nameRecordedBy_Standard", "Ctrl_recordNumber_Standard",
    "Ctrl_key_family_recordedBy_recordNumber", "Ctrl_geospatial_quality",
    "Ctrl_verbatim_quality", "Ctrl_moreInformativeRecord",
    "Ctrl_coordinates_validated_by_gbif_issue", "wcvp_searchedName",
    "parseGBIF_digital_voucher", "parseGBIF_duplicates", "parseGBIF_num_duplicates",
    "parseGBIF_non_groupable_duplicates", "parseGBIF_duplicates_grouping_status",
    "parseGBIF_unidentified_sample", "parseGBIF_sample_taxon_name",
    "parseGBIF_sample_taxon_name_status", 
     "parseGBIF_number_taxon_names",
    "parseGBIF_decimalLongitude", "parseGBIF_decimalLatitude",
    "parseGBIF_wcvp_plant_name_id", "parseGBIF_wcvp_taxon_rank",
    "parseGBIF_wcvp_taxon_status", "parseGBIF_wcvp_family", "parseGBIF_wcvp_taxon_name",
    "parseGBIF_wcvp_taxon_authors", "parseGBIF_wcvp_reviewed",
    "parseGBIF_dataset_result", "parseGBIF_freq_duplicate_or_missing_data",
    "parseGBIF_duplicates_map", "parseGBIF_merged_fields", "parseGBIF_merged")
)
}
\arguments{
\item{path_file}{Character. Directory path where the parseGBIF output file is located.}

\item{name_file}{Character. Name of the parseGBIF output file. Default is "parseGBIF_5_occ_all_data.csv".}

\item{data_sel}{Character vector. Types of data to include: c('useable', 'unusable', 'duplicate').
Default includes all three categories.}

\item{dwc_col}{Character vector. Darwin Core columns to include in the output.
Default includes core Darwin Core fields.}

\item{parseGBIF_col}{Character vector. parseGBIF-specific columns to include in the output.
Default includes key parseGBIF processing columns.}
}
\value{
Returns a list with three data frames:
\itemize{
\item \code{useable}: Records classified as usable (identified specimens)
\item \code{unusable}: Records classified as unusable (unidentified specimens)
\item \code{duplicate}: Records classified as duplicates
}
}
\description{
Loads and processes parseGBIF output files, filtering and organizing occurrence data
into usable, unusable, and duplicate categories.
}
\details{
This function reads parseGBIF output files, selects specified columns,
extracts genus and family information, and organizes the data into
three categories based on the parseGBIF_dataset_result field.

The function handles:
\itemize{
\item Reading UTF-8 encoded CSV files
\item Column selection based on Darwin Core and parseGBIF specifications
\item Genus extraction from scientific names
\item Family extraction from the composite key field
\item Data filtering based on quality assessment results
}
}
\note{
\itemize{
\item Requires parseGBIF output files in CSV format
\item Assumes specific column names from parseGBIF processing
\item Handles large files through iterative reading
\item Returns data organized by quality assessment categories
}
}
\examples{
\dontrun{
# Load parseGBIF output data
occ_data <- get_parseGBIF_output(
  path_file = "path/to/parseGBIF/output",
  name_file = "parseGBIF_5_occ_all_data.csv"
)

# Access different data categories
usable_records <- occ_data$useable
unusable_records <- occ_data$unusable
duplicate_records <- occ_data$duplicate

# View structure of the data
str(occ_data)
}

}
\author{
Pablo Hendrigo Alves de Melo,
Nadia Bystriakova &
Alexandre Monro
}
