% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_data.R
\name{export_data}
\alias{export_data}
\title{Export of results}
\usage{
export_data(
  occ_digital_voucher_file = "",
  occ_digital_voucher = NA,
  merge_unique_collection_event_incomplete = FALSE,
  fields_to_merge = c("Ctrl_fieldNotes", "Ctrl_year", "Ctrl_stateProvince",
    "Ctrl_municipality", "Ctrl_locality", "Ctrl_countryCode", "Ctrl_eventDate",
    "Ctrl_habitat", "Ctrl_level0Name", "Ctrl_level1Name", "Ctrl_level2Name",
    "Ctrl_level3Name"),
  fields_to_compare = c("Ctrl_gbifID", "Ctrl_scientificName", "Ctrl_recordedBy",
    "Ctrl_recordNumber", "Ctrl_identifiedBy", "Ctrl_dateIdentified",
    "Ctrl_institutionCode", "Ctrl_collectionCode", "Ctrl_datasetName",
    "Ctrl_datasetName", "Ctrl_language", "wcvp_plant_name_id", "wcvp_taxon_rank",
    "wcvp_taxon_status", "wcvp_family", "wcvp_taxon_name", "wcvp_taxon_authors",
    "wcvp_reviewed", "wcvp_searchNotes"),
  fields_to_parse = c("Ctrl_gbifID", "Ctrl_bibliographicCitation", "Ctrl_language",
    "Ctrl_institutionCode", "Ctrl_collectionCode", "Ctrl_datasetName",
    "Ctrl_basisOfRecord", "Ctrl_catalogNumber", "Ctrl_recordNumber", "Ctrl_recordedBy",
    "Ctrl_occurrenceStatus", "Ctrl_eventDate", "Ctrl_year", "Ctrl_month", "Ctrl_day",
    "Ctrl_habitat", "Ctrl_fieldNotes", "Ctrl_eventRemarks", "Ctrl_countryCode",
    "Ctrl_stateProvince", "Ctrl_municipality", "Ctrl_county", "Ctrl_locality",
    "Ctrl_level0Name", "Ctrl_level1Name", "Ctrl_level2Name", 
     "Ctrl_level3Name",
    "Ctrl_identifiedBy", "Ctrl_dateIdentified", "Ctrl_scientificName",
    "Ctrl_decimalLatitude", "Ctrl_decimalLongitude", "Ctrl_nameRecordedBy_Standard",
    "Ctrl_recordNumber_Standard", "Ctrl_key_family_recordedBy_recordNumber",
    "Ctrl_geospatial_quality", "Ctrl_verbatim_quality", "Ctrl_moreInformativeRecord",
    "Ctrl_coordinates_validated_by_gbif_issue", "wcvp_plant_name_id", "wcvp_taxon_rank",
    "wcvp_taxon_status", "wcvp_family", "wcvp_taxon_name", "wcvp_taxon_authors",
    "wcvp_reviewed", 
     "wcvp_searchNotes", "parseGBIF_digital_voucher",
    "parseGBIF_duplicates", "parseGBIF_num_duplicates",
    "parseGBIF_non_groupable_duplicates", "parseGBIF_duplicates_grouping_status")
)
}
\arguments{
\item{occ_digital_voucher_file}{CSV fila result of function select_digital_voucher()$occ_digital_voucher}

\item{occ_digital_voucher}{data frame result of function select_digital_voucher()$occ_digital_voucher}

\item{merge_unique_collection_event_incomplete}{include records unique collection events incomplete in merge processing}

\item{fields_to_merge}{fields to merge}

\item{fields_to_compare}{fields to compare content frequency}

\item{fields_to_parse}{all fields}
}
\value{
list with 10 data frames
\itemize{
\item \strong{all_data} All records processed, merged Unique collection events complete / incomplete and their duplicates
\item \strong{unique_collection_event_complete_merge} Merged Unique collection events complete
\item \strong{unique_collection_event_complete_raw} Raw Unique collection events complete
\item \strong{duplicates} Duplicates of unique collection events complete / incomplete
\item \strong{unique_collection_event_incomplete_merge} Merged Unique collection events incomplete,
It is NA if merge_unique_collection_event_incomplete is FALSE.
\item \strong{unique_collection_event_incomplete_raw} Raw Unique collection events incomplete
\item \strong{parseGBIF_general_summary}
\item \strong{parseGBIF_merge_fields_summary}
\item \strong{parseGBIF_merge_fields_summary_complete}
\item \strong{parseGBIF_merge_fields_summary_incomplete} It is NA if merge_unique_collection_event_incomplete is FALSE
}
}
\description{
from the selected digital voucher:
\itemize{
\item select the taxonomic identification of the sample,
\item Select geographic coordinates,
\item Merge information between fields of duplicates of a sample,
\item Compare the frequency of content in fields
\item Generate data summary
\item Export results
}
}
\details{
Each data frame should be used as needed
}
\examples{
\donttest{
help(export_data)

results <- export_data(occ_digital_voucher_file = file.occ_digital_voucher,
                       merge_unique_collection_event_incomplete = TRUE)

names(results)

results$parseGBIF_general_summary
results$parseGBIF_merge_fields_summary
results$parseGBIF_merge_fields_summary_complete
NROW(results$all_data)
NROW(results$unique_collection_event_complete_merge)
NROW(results$unique_collection_event_incomplete_raw)
NROW(results$duplicates)

}
}
\seealso{
\code{\link[ParsGBIF]{batch_checkName_wcvp}}, \code{\link[ParsGBIF]{extract_gbif_issue}}
}
\author{
Pablo Hendrigo Alves de Melo,
Nadia Bystriakova &
Alexandre Monro
}
