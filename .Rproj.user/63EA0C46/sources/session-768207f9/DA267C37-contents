#' @details ParsGBIF - package  creation - Only in development times
{

  # library(rWCVP_data)

  rm(list = ls())
  library(pkgdown)
  library(devtools)


  path.pkg <- 'C:\\parseGBIF - github.com\\parseGBIF'
  setwd(path.pkg)

  # update_collate(getwd())


  devtools::load_all(as.package(path.pkg))


  roxygen2::roxygenize(package.dir = path.pkg,
                       roclets = c("collate", "namespace", "rd"),
                       clean=TRUE)

  devtools::load_all(as.package(path.pkg))

  # library(parseGBIF)

  devtools::build_manual(path = path.pkg)


  devtools::build(path = path.pkg)




  # pkgdown::build_site(path.pkg)

}


{

  wcvp_names <- parseGBIF::wcvp_get_data(path_results= 'C:\\Dados\\Kew\\data')$wcvp_names
  colnames(wcvp_names)


  save(wcvp_names,
       file = "C:\\parseGBIF - github.com\\parseGBIF\\dataWCVP\\wcvp_names.rda",
       ascii = TRUE)


  wcvp_names_2 <- load(file = "C:\\parseGBIF - github.com\\parseGBIF\\dataWCVP\\wcvp_names.rda")

  head(wcvp_names_2)

}

rm(list = ls())
devtools::install_github("pablopains/parseGBIF")


{
  rm(list = ls())

  library(devtools)
  # library(rcmdcheck)
  # library(pdflatex)
  setwd("C:\\ParsGBIF - github.com")

  # install.packages("rcmdcheck")
  # install.packages("devtools")


  # here::dr_here()
  # here::i_am('C:\\ParsGBIF - github.com')


  # EnumOccurrenceIssue <- readr::read_csv("C:/ParsGBIF/data/EnumOccurrenceIssue.csv",
  #                                        locale = readr::locale(encoding = "UTF-8"),
  #                                        show_col_types = FALSE)
  #
  # usethis::use_data(EnumOccurrenceIssue,
  #                   overwrite = TRUE)
  #
  # # save(EnumOccurrenceIssue,
  # #      file = "C:/ParsGBIF - github.com/data/EnumOccurrenceIssue.rda",
  # #      ascii = TRUE)
  #
  files <- 'C:\\ParsGBIF\\dataWCVP\\wcvp_names.csv'
  wcvp_names <- utils::read.table(files, sep="|", header=TRUE, quote = "", fill=TRUE, encoding = "UTF-8") %>%
    data.frame(stringsAsFactors = F) %>%
    dplyr::mutate(TAXON_NAME_U = taxon_name %>% toupper(),
                  TAXON_AUTHORS_U = taxon_authors %>% toupper() %>% gsub ("\\s+", "", .))
  #
  # wcvp_names_Achatocarpaceae <- wcvp_names %>%
  #   dplyr::filter(family %in% 'Achatocarpaceae')
  #
  # usethis::use_data(wcvp_names_Achatocarpaceae,
  #                   overwrite = TRUE)
  # # save(wcvp_names,
  # #      file = "C:/ParsGBIF - github.com/data/wcvp_names_Achatocarpaceae.rda",
  # #      ascii = TRUE)


  roxygen2::roxygenize(package.dir = "C:\\ParsGBIF - github.com",
                       roclets = c("collate", "namespace", "rd"),
                       clean=TRUE)

  # or
  # devtools::document(as.package("C:\\ParsGBIF - github.com"),
  #                    roclets =  c("collate", "namespace", "rd"))

  devtools::load_all(as.package("C:\\ParsGBIF - github.com"))

  # devtools::check("C:\\ParsGBIF - github.com")


  devtools::build_manual(path = "C:\\ParsGBIF - github.com")
  # devtools::build_readme(path = "C:\\ParsGBIF - github.com")
  devtools::build(path = "C:\\ParsGBIF - github.com")
}

{
  rm(list = ls())
  devtools::install_github("pablopains/ParsGBIF")
  # library(ParsGBIF)

}

{
   rm(list = ls())
   setwd("C:\\ParsGBIF - github.com")

   library(tinytex)
   library(roxygen2); # Read in the roxygen2 R package
   library(rcmdcheck)
   roxygen2::roxygenize(package.dir = "C:\\ParsGBIF - github.com",
              roclets = c("collate", "namespace", "rd"),
              clean=TRUE)


   # roxygen2::roxygenise(package.dir = "C:\\ParsGBIF - github.com",
   #                      roclets = c("collate", "namespace", "rd"),
   #                      clean=TRUE);      # Builds the help files

   update_collate(getwd())

   ck_res <- rcmdcheck::rcmdcheck(path="C:\\ParsGBIF - github.com",
                                  # build_args=c("--force", "--keep-empty-dirs"),
                                  check_dir = "C:\\ParsGBIF\\teste pacote")

   parse_check(ck_res,
               file = 'C:\\ParsGBIF\\teste pacote\\ParsGBIF.Rcheck\\00check')

   rcmdcheck::check_details(ck_res)

library(ParsGBIF)
  rcmdcheck::cran_check_results('ParsGBIF')


  help(update_collectorsDictionary)

  help(prepare_collectorsDictionary)

  help(batch_checkName_wcvp)



  rm(list = ls())
  devtools::install_github("pablopains/ParsGBIF")
  library(ParsGBIF)

  data(wcvp_names_Achatocarpaceae)
  head(wcvp_names)


  help(prepare_gbif_occurrence_data)

  help(extract_gbif_issue)


}
